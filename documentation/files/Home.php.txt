<?php defined('BASEPATH') OR exit('No direct script access allowed');
/**
 * This controller will handle all incoming requests and interactions and inputs from the User view and update the
 * database using User model.
 *
 * @package Application/Controller
 * @subpackage Home
 * @author Steven Chou <schou@labpetri.org>
 * @copyright 2015 - 2017 Lab Petri
 * @version 1.0.0
 */
class Home extends CI_Controller
{
/**
 * Assembles tools for Home.
 * @return void
 */
   public function __construct()
   {
      parent::__construct();
      $this->load->model('home_model');
      $this->load->library('form_validation');
      $this->load->helper(array('form', 'url'));
   }

   public function index()
   {
      if ((isset($_SESSION['logged_in'])) && ($_SESSION['logged_in']==TRUE)) {
         if ($this->input->post('new_post') == 'new_post') {
            $this->form_validation->set_rules('title', 'title', 'trim|required');
            $this->form_validation->set_rules('abstract', 'abstract', 'trim|required');
            $this->form_validation->set_rules('post_file', 'post_file', 'callback_do_upload');
         }

         if ($this->input->post('new_comment') == 'new_comment') {
            $this->form_validation->set_rules('comments', 'comments', 'trim|required');
         }

         if ($this->input->post('new_subcomment') == 'new_subcomment') {
            $this->form_validation->set_rules('subcomments', 'subcomments', 'trim|required');
         }

         if ($this->form_validation->run() === FALSE) {
            $this->load->view('templates/header');
            $this->load->view('home2', array(
                'research' => $this->home_model->get_posts(0),
                'project' => $this->home_model->get_posts(1),
                'job' => $this->home_model->get_posts(2),
                'teams' => "1",
            ));
            $this->load->view('templates/footer');

         } else {

            if ($this->input->post('new_post') == 'new_post') {
               if ($this->input->post('research') == 'research') {
                  $this->creates_post(0);
               }
               if ($this->input->post('project') == 'project') $this->creates_post(1);
               if ($this->input->post('job') == 'job') $this->creates_post(2);
            }

            if ($this->input->post('new_comment') == 'new_comment') $this->creates_comment();
            if ($this->input->post('new_subcomment') == 'new_subcomment') $this->creates_subcomment();
            redirect('');
         }
      }
      else
      {
         $this->load->view('home');
      }
   }

   public function creates_subcomment()
   {
      $this->home_model->insert_comment( array (
          'type' => $this->input->post('new_subcomment'),
          'comment_id' => $this->input->post('comment_id'),
          'comments' => nl2br($this->input->post('subcomments')),
          'order_id' => $this->input->post('order_id'),
      ));
   }

   public function creates_comment()
   {
      $this->home_model->insert_comment( array(
          'type' => $this->input->post('new_comment'),
          'comment_id' => $this->input->post('comment_id'),
          'comments' => nl2br($this->input->post('comments')),
      ));
   }

   public function creates_post($type)
   {
      $this->db->set('month','MONTHNAME(NOW())',FALSE);
      $this->db->set('day', 'DAY(NOW())',FALSE);
      $this->db->set('yr', 'YEAR(NOW())',FALSE);
      $this->db->set('initial_time', 'CURRENT_TIME', FALSE);

      $this->home_model->insert_post( array(
          'user_id' => $this->session->user_id,
          'title' => $this->input->post('title'),
          'abstract' => nl2br($this->input->post('abstract')),
          'topic' => $this->input->post('topic'),
          'comment_id' => '0.0',
          'type' => $type,
          'major' => $this->input->post('major'),
          'gpa' => $this->input->post('gpa'),
          'courses' => nl2br($this->input->post('courses')),
          'extra' => nl2br($this->input->post('extra')),

      ));
   }

   public function add_bookmark()
   {
      $this->home_model->bookmarks( array(
          'post_id' => $this->input->get('id'),
          'user_id' => $this->session->user_id,
          'type'    => 'petridish',
      ));
      redirect('');
   }

   public function do_upload()
   {
      $config['upload_path'] = './users/'.$this->session->user_id.'/research/';
      $config['allowed_types'] = 'pdf';
      $config['max_size']	= '1000';
      $config['max_width']  = '1024';
      $config['max_height']  = '768';
      $this->load->library('upload', $config);

      if ( !$this->upload->do_upload('post_file'))
      {
         $error = array('error' => $this->upload->display_errors());
         //return FALSE;
         return TRUE;
      }
      else
      {
         $data = array('upload_data' => $this->upload->data());
         $this->home_model->insert_research_file($this->upload->data('file_name'));
         return TRUE;
      }
   }

   public function delete_post()
   {
      $this->home_model->delete_post( array(
          'post_id' => $this->input->post('post'),
          'comment_id' => $this->input->post('comment'),
          'user_id' => $this->session->user_id,
      ));
      redirect('');
   }
}

